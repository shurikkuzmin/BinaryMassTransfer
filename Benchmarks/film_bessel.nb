(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    195854,       4279]
NotebookOptionsPosition[    188892,       4039]
NotebookOutlinePosition[    189229,       4054]
CellTagsIndexPosition[    189186,       4051]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
      RowBox[{
       RowBox[{"y", "[", "x", "]"}], "*", 
       RowBox[{"x", "^", "2"}], 
       RowBox[{"m", "^", "4"}]}]}], "==", "0"}], "}"}], ",", 
   RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.5315978652575703`*^9, 3.531597910091198*^9}, {
  3.531598118484159*^9, 3.531598120218515*^9}, {3.5315981605241423`*^9, 
  3.5315982169014883`*^9}, {3.531598448657933*^9, 3.5315984501353683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"ParabolicCylinderD", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"1", "/", "4"}]], " ", 
         SqrtBox["2"], " ", "m", " ", "x"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"ParabolicCylinderD", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
          RowBox[{"3", "/", "4"}]], " ", 
         SqrtBox["2"], " ", "m", " ", "x"}]}], "]"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.531597899520812*^9, 3.531597910789948*^9}, 
   3.5315981208175173`*^9, {3.5315981815918922`*^9, 3.531598217408827*^9}, 
   3.531598450670126*^9, 3.5324409548122263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParabolicCylinderD", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5315984036865463`*^9, 3.5315984114738894`*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"1", "/", "4"}]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["3", "4"], "]"}]}]]], "Output",
 CellChangeTimes->{3.531598412206005*^9, 3.5324409549028673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParabolicCylinderD", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"1", "/", "4"}]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["3", "4"], "]"}]}]]], "Output",
 CellChangeTimes->{3.532440955043683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ",", "x"}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5315985098872833`*^9, 3.531598524762072*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "x", " ", 
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", "x"}], "]"}]}], "-", 
  RowBox[{"ParabolicCylinderD", "[", 
   RowBox[{
    FractionBox["1", "2"], ",", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.5315985251014633`*^9, 3.532440955155656*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sol", "[", 
   RowBox[{"x_", ",", "m_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ParabolicCylinderD", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ",", 
     RowBox[{"m", 
      RowBox[{"(", 
       RowBox[{"1", "+", "I"}], ")"}], "x"}]}], "]"}], "-", 
   RowBox[{"ParabolicCylinder", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "2"}], ",", 
     RowBox[{"m", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "I"}], ")"}], "x"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.531599028438242*^9, 3.531599132407632*^9}, {
  3.53159919389427*^9, 3.531599194818763*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Sol", "[", "x", "]"}], ",", "x"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.531599135108122*^9, 3.531599160211007*^9}, {
  3.531599204143506*^9, 3.531599215807111*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["Sol", "\[Prime]",
   MultilineFunction->None], "[", "1", "]"}]], "Output",
 CellChangeTimes->{{3.5315991520196133`*^9, 3.53159916098357*^9}, {
   3.531599207149193*^9, 3.531599218464402*^9}, 3.532440955321763*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"der", "[", "m_", "]"}], ":=", 
  RowBox[{"\[ImaginaryI]", " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"ParabolicCylinderD", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "m"}]}], "]"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ParabolicCylinderD", "[", 
         RowBox[{
          FractionBox["1", "2"], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", "m"}]}], "]"}], 
        "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox["ParabolicCylinder", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[ImaginaryI]"}], ")"}], " ", "m"}]}],
           "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.531599219492779*^9, 3.53159923772265*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"der", "[", "m", "]"}], "\[Equal]", "0"}], ",", "m"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5315991652641277`*^9, 3.53159918042067*^9}, {
  3.531599244155555*^9, 3.531599318263753*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "::", "\<\"ifun\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Inverse functions are being \
used by \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Solve\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\", so some solutions may not be found; \
use Reduce for complete solution information.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Solve/ifun\\\", \
ButtonNote -> \\\"Solve::ifun\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.531599180916918*^9, {3.531599247102675*^9, 3.531599318684482*^9}, 
   3.532440955691305*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"m", "\[Rule]", "0.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.531599180991338*^9, {3.5315992471245403`*^9, 3.531599318691268*^9}, 
   3.532440955733295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"der", "[", "m", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.531599320699485*^9, 3.531599333528714*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindRoot", "::", "\<\"nlnum\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"The function value \
\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\\((\\(\\(0.` \
\[InvisibleSpace]\\)\\) + \\(\\(0.1`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \
\\(\\((\\(\\((\\(\\(0.11581335375890106` \[InvisibleSpace]\\)\\) - \
\\(\\(0.0058136541018157`\\\\ \[ImaginaryI]\\)\\))\\)\\) - \
\\(\\(\\(\\((\\(\\(1.` \[InvisibleSpace]\\)\\) - \\(\\(1.`\\\\ \
\[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\((\\(\\((\\(\\(0.6423699994229543` \
\[InvisibleSpace]\\)\\) + \\(\\(0.054797137183475245`\\\\ \
\[ImaginaryI]\\)\\))\\)\\) + \\(\\(\\(\\((\\(\\(0.` \[InvisibleSpace]\\)\\) + \
\\(\\(1.`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \\(\\(\\(\\(\\*SuperscriptBox[\\\
\"ParabolicCylinder\\\", TagBox[\\((0, 1)\\), Derivative], \
Rule[MultilineFunction, None]]\\)\\)[\\(\\(\\(\\(-0.5`\\)\\), \
\\(\\(\\(\\(-0.1`\\)\\) + \\(\\(0.1`\\\\ \
\[ImaginaryI]\\)\\)\\)\\)\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\))\\)\\)}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is not a list of \
numbers with dimensions \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({1}\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" at \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\({m}\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" = \\\\\\\"\\\", \\\"MT\
\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({0.1`}\\), \\\"MT\\\"]\\)\[NoBreak]\
\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindRoot\\\", ButtonNote -> \
\\\"FindRoot::nlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5315993338678207`*^9, 3.532440955874544*^9}],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"der", "[", "m", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0.1`"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.531599333900455*^9, 3.5324409558794127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"der", "[", "0.1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.531599351457444*^9, 3.5315993801777143`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "0.05817592081376634`"}], "-", 
    RowBox[{"0.05813537828475284`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"0.1`", "\[InvisibleSpace]", "-", 
     RowBox[{"0.1`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["ParabolicCylinder", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "1"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{
     RowBox[{"-", "0.5`"}], ",", 
     RowBox[{
      RowBox[{"-", "0.1`"}], "+", 
      RowBox[{"0.1`", " ", "\[ImaginaryI]"}]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.5315993546919603`*^9, 3.531599380561953*^9}, 
   3.532440956021637*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   SuperscriptBox["ParabolicCylinder", 
    TagBox[
     RowBox[{"(", 
      RowBox[{"0", ",", "1"}], ")"}],
     Derivative],
    MultilineFunction->None], "[", 
   RowBox[{
    RowBox[{"-", "0.5`"}], ",", "0.1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.531599391508932*^9, 3.531599399921873*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["ParabolicCylinder", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"0", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{
   RowBox[{"-", "0.5`"}], ",", "0.1`"}], "]"}]], "Output",
 CellChangeTimes->{3.531599400219404*^9, 3.532440956092551*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", "4"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.531663884760845*^9, 3.5316639017916718`*^9}}],

Cell[BoxData["0.6693848172615746`"], "Output",
 CellChangeTimes->{{3.531663897482966*^9, 3.53166390222985*^9}, 
   3.53244095618814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"1", "/", "4"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.531663903549396*^9, 3.531663909894068*^9}}],

Cell[BoxData["0.7522313333407901`"], "Output",
 CellChangeTimes->{3.5316639104561653`*^9, 3.532440956312829*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fun1", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "/", "4"}], "}"}]}], "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"\[Pi]", " ", "x"}], "]"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "4"}], ",", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}], "+", 
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.5316647026492357`*^9, 3.531664764350456*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fun2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "^", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], "/", "4"}], "}"}]}], "*", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"\[Pi]", " ", "x"}], "]"}], "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", "4"}], ",", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}], "-", 
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.531664772802533*^9, 3.531664779697209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fun1", "[", "x", "]"}], ",", 
     RowBox[{"fun2", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5316647813398857`*^9, 3.531664818995451*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
ZV5lOZKBHCkDDxIXK1PHM1l7ZODrzlyxQ9z9EX4bAglGMkDuMpVc5sZf+u3l
uMWUq8+tbf+p+Ywhtw0F4GAhA5Py01+quPw6w6aVgw7KgFzy9s109zFkQdf/
l2MlA2/uKUf7uY6hEvDtaLSWgXUey2X3z44hraSiIo4tNx/nYvJkncZQ8vR8
HNleBj6FD+5VcBhDqy13XDY+IQMKtv95xNmOoWvZN464O8pA3arcNRFWY2hI
AOs9PCMDlQsLh5fMx1B10e6/fa4yEHS0dcFs5xjaJh1QK3RRBtZe9ndW2zyG
st0rcnS9ZGBjzhndG1pj6B7N2OWmrwzcHrveE0scQ3M3Qowyr8sAS0X0h434
GHJprVrz46YMrP4WR4kWGEMm4Ra9xCAZaGAr6l4aHUUfGOEYQmTgitcML6l3
FKntqU85GyYDbSqRF3c1j6IVs4eOvYuSgR8qXefHPoyiryePNlmmyoBGcU+w
oN8o2lQc/+bKExlwGr1W7ec6ijJk2h+kZsjAqpNGge7HRlFgtb3FSLYM7BQ2
mS3TH0V7Njl+vfteBgzeBuWvZ42g/Ij09LyPMoDrU91uNI8gKmvgzq9P3PXw
IAVTbj3zpp7dRauQgTOMmS3WMSOodKXb+88NMvA343Os8eYRpOuY93CwiVsf
hYXdN5RGUFrJX2+RFhnw7avcrsc/gm55euke65KBPdB1VrZ+GO3quPJimiUD
SwU3B3+dHEbFef5JWvyyUENczgq8MIRWWFgrxK2QhUfZBr/5TIfQIZZaAq+w
LKTE/vf275ohxKDVPvpNkAVW3p5huQ4WkkqQi76tLAsSsuuVCoCFXANehjRv
lQVn1tvYd2wGKiTfWol2ysJ7fkeRi18ZiPfzoeAXIAtNXkGhT+MZKG5uJuCm
sSyM2q4fubaTgb647b6lbi0LwXYlxkJ36EjR9vclPw9ZOF99ZfDs+AByns6a
onvLwuNqySStkgH0Jvq696ErstC8JU3v2t0BZFxL9lS9KQsfRA31C5QGkPce
1wsNYbKQfPtJVNnuflSjxeO05jmXz71/l3dc6UXXeddZ/uiShatdvCWOuh2I
bri6VbVXFlZ+P1y7+k07sgwZOXFnQJb7XmC7KG5oR2vEX13UH5aFw8e/S1zV
aUM/lDY9SJuTBc/FNYLX17YgZYNddT5ScvDCOl2PwGlE5e5WFiRTOfj2Yo5v
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
C1sW9rajz5OqnOVlGvB++3roWnc7+h+qrQk6
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
78djLZd7nFvQ/wB3eObp
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 10}, {-1.101218596088962, 1.6072325506444505`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5316647919849367`*^9, 3.531664819972671*^9}, 
   3.5324409569330053`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"funm1", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    RowBox[{"m", " ", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["x", "2"]}], "2"]}], "]"}], "+", 
     RowBox[{"BesselJ", "[", 
      RowBox[{
       FractionBox["1", "4"], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["x", "2"]}], "2"]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.5316651326397457`*^9, 3.5316651717023487`*^9}, {
   3.531665368064719*^9, 3.531665370048942*^9}, {3.531665445495673*^9, 
   3.5316654525616817`*^9}, 3.531665550752943*^9, 3.531665656008925*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"funm2", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    RowBox[{"m", " ", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["x", "2"]}], "2"]}], "]"}], "-", 
     RowBox[{"BesselJ", "[", 
      RowBox[{
       FractionBox["1", "4"], ",", 
       FractionBox[
        RowBox[{
         SuperscriptBox["m", "2"], " ", 
         SuperscriptBox["x", "2"]}], "2"]}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.531665161897429*^9, 3.5316652116454153`*^9}, {
  3.5316654557808533`*^9, 3.5316654590973186`*^9}, {3.531665661242023*^9, 
  3.531665679324669*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funderm1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"funm1", "[", "x", "]"}], ",", "x"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.531665222669688*^9, 3.531665225540216*^9}, {
  3.5316653390896873`*^9, 3.53166535348297*^9}, {3.531665701697542*^9, 
  3.5316657122263803`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "m", " ", 
  SqrtBox["\[Pi]"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", " ", "x"}], ")"}], 
   RowBox[{"3", "/", "2"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["x", "2"]}], "2"]}], "]"}], "-", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      FractionBox["3", "4"], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["x", "2"]}], "2"]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.531665354134008*^9, 3.531665372315712*^9}, {
   3.531665703603795*^9, 3.531665713020299*^9}, 3.532440957529106*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"funderm2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"funm2", "[", "x", "]"}], ",", "x"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.53166571467519*^9, 3.531665726122403*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", "m", " ", 
  SqrtBox["\[Pi]"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", " ", "x"}], ")"}], 
   RowBox[{"3", "/", "2"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["x", "2"]}], "2"]}], "]"}], "+", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      FractionBox["3", "4"], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["m", "2"], " ", 
        SuperscriptBox["x", "2"]}], "2"]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.531665727907568*^9, 3.532440957928595*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"funm1", "[", "0", "]"}], "*", 
      RowBox[{"funderm2", "[", "1", "]"}]}], "-", 
     RowBox[{
      RowBox[{"funm2", "[", "0", "]"}], "*", 
      RowBox[{"funderm1", "[", "1", "]"}]}]}], "\[Equal]", "0"}], ",", "m"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.531665795010336*^9, 3.531665871219345*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Infinity]", "::", "\<\"indet\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Indeterminate expression \
\\\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(0\\\\ \
\\@\[Pi]\\\\ ComplexInfinity\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\
\"\\\\\\\" encountered.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.531665860958839*^9, 3.531665875167665*^9}, 
   3.532440958251136*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Infinity]", "::", "\<\"indet\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Indeterminate expression \
\\\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(0\\\\ \
\\@\[Pi]\\\\ ComplexInfinity\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\
\"\\\\\\\" encountered.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.531665860958839*^9, 3.531665875167665*^9}, 
   3.532440958298635*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.53166586096725*^9, 3.5316658751762037`*^9}, 
   3.532440958398615*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"funm1", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5316659811632833`*^9, 3.531665991370829*^9}, {
  3.531666039249349*^9, 3.5316660489329977`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["m", "2"], ")"}], 
    RowBox[{"3", "/", "4"}]], " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]]}], 
  RowBox[{
   SuperscriptBox["m", 
    RowBox[{"3", "/", "2"}]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["3", "4"], "]"}]}]]], "Output",
 CellChangeTimes->{3.531665991969522*^9, 3.5316660500177107`*^9, 
  3.5324409587918797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"funm2", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5316660539772997`*^9, 3.531666062526258*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["m", "2"], ")"}], 
    RowBox[{"3", "/", "4"}]], " ", 
   SqrtBox[
    FractionBox["\[Pi]", "2"]]}], 
  RowBox[{
   SuperscriptBox["m", 
    RowBox[{"3", "/", "2"}]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["3", "4"], "]"}]}]]], "Output",
 CellChangeTimes->{3.5316660632399406`*^9, 3.532440958987249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"funderm1", "/.", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.531666098556487*^9, 3.531666159305838*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["m", 
   RowBox[{"5", "/", "2"}]], " ", 
  SqrtBox["\[Pi]"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], ",", 
      FractionBox[
       SuperscriptBox["m", "2"], "2"]}], "]"}], "-", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      FractionBox["3", "4"], ",", 
      FractionBox[
       SuperscriptBox["m", "2"], "2"]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.531666159839328*^9, 3.53244095939572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"funderm2", "/.", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.531666167149877*^9, 3.5316661753528633`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  SuperscriptBox["m", 
   RowBox[{"5", "/", "2"}]], " ", 
  SqrtBox["\[Pi]"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], ",", 
      FractionBox[
       SuperscriptBox["m", "2"], "2"]}], "]"}], "+", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      FractionBox["3", "4"], ",", 
      FractionBox[
       SuperscriptBox["m", "2"], "2"]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5316661757981987`*^9, 3.532440959591259*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     SuperscriptBox["m", 
      RowBox[{"5", "/", "2"}]], " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "4"]}], ",", 
         FractionBox[
          SuperscriptBox["m", "2"], "2"]}], "]"}], "+", 
       RowBox[{"BesselJ", "[", 
        RowBox[{
         FractionBox["3", "4"], ",", 
         FractionBox[
          SuperscriptBox["m", "2"], "2"]}], "]"}]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["m", 
      RowBox[{"5", "/", "2"}]], " ", 
     SqrtBox["\[Pi]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["3", "4"]}], ",", 
         FractionBox[
          SuperscriptBox["m", "2"], "2"]}], "]"}], "-", 
       RowBox[{"BesselJ", "[", 
        RowBox[{
         FractionBox["3", "4"], ",", 
         FractionBox[
          SuperscriptBox["m", "2"], "2"]}], "]"}]}], ")"}]}]}], "\[Equal]", 
   "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.53166619156245*^9, 3.5316662224490213`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["m", 
    RowBox[{"5", "/", "2"}]], " ", 
   RowBox[{"BesselJ", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "4"]}], ",", 
     FractionBox[
      SuperscriptBox["m", "2"], "2"]}], "]"}]}], "\[Equal]", "0"}]], "Output",\

 CellChangeTimes->{3.531666222972858*^9, 3.532440959781682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BesselJZero", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], "/", "4"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.531666320634715*^9, 3.531666338725951*^9}}],

Cell[BoxData[
 RowBox[{"BesselJZero", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["3", "4"]}], ",", "10"}], "]"}]], "Output",
 CellChangeTimes->{3.53244096002703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"BesselJZero", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "4"]}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.531666449271017*^9, 3.531666458520109*^9}}],

Cell[BoxData["1.0585082594041366`"], "Output",
 CellChangeTimes->{{3.531666454519803*^9, 3.531666458888792*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zeros", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", 
        RowBox[{"BesselJZero", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "/", "4"}], ",", "i"}], "]"}]}], "]"}], ",", 
      "10"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.531666462811174*^9, 3.531666501789239*^9}, {
  3.531666760795321*^9, 3.531666761061252*^9}, {3.531666936564768*^9, 
  3.5316669368963623`*^9}, {3.531667150682876*^9, 3.531667151485359*^9}, {
  3.531667878573022*^9, 3.5316678795003757`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.45499708549819386722507026854180579346`10.", ",", 
   "2.92713300440027766553121136094888110735`10.", ",", 
   "3.8575781013492938200342434118812546441`10.", ",", 
   "4.60177773228129985324241798621793597148`10.", ",", 
   "5.24082406699070314354952418816449605517`10.", ",", 
   "5.80978786426398906487468774457944491812`10.", ",", 
   "6.32769430108396681532057061373337375445`10.", ",", 
   "6.8062480022514212669586769504065468988`10.", ",", 
   "7.25326168965686308822824791463505009483`10.", ",", 
   "7.6742592995607184149250788121278225534`10.", ",", 
   "8.07331795319108946335626947213305371378`10.", ",", 
   "8.45354897437340233163926840148873400306`10.", ",", 
   "8.81739086884080680472896916336389339722`10.", ",", 
   "9.16679702363228751221979864959553140746`10.", ",", 
   "9.50336098897760887069148869968298949199`10.", ",", 
   "9.82840298647447126437751319761265707777`10.", ",", 
   "10.14303137712219911244514916412671544951`10.", ",", 
   "10.44818741811621983414432659838862125807`10.", ",", 
   "10.74467854808127573053205335964669225223`10.", ",", 
   "11.03320360258297538892991564331548075855`10.", ",", 
   "11.31437222998145142057443770168774860219`10.", ",", 
   "11.58872005940677119103217820431909528765`10.", ",", 
   "11.85672070452047449321754322768063874146`10.", ",", 
   "12.11879537438111167446084673341581712359`10.", ",", 
   "12.37532064988645588833414500384166974648`10.", ",", 
   "12.62663483645073127192279608364483685065`10.", ",", 
   "12.8730431991488418101183117224826294002`10.", ",", 
   "13.11482231162738863620077232279337810946`10.", ",", 
   "13.35222369554359348133575969794532279845`10.", ",", 
   "13.58547688707664934803393403887138075079`10.", ",", 
   "13.81479203704230978691485194517723996389`10.", ",", 
   "14.0403621284925403691860805796792028747`10.", ",", 
   "14.2623648784142054972133104428159388272`10.", ",", 
   "14.4809643768493324602515059590286238574`10.", ",", 
   "14.69631250643745383397730190280670992963`10.", ",", 
   "14.90855017729768053412230968849290743382`10.", ",", 
   "15.11780840578937570988470787292523813834`10.", ",", 
   "15.32420926061949995243758582398480085884`10.", ",", 
   "15.52786669570596600871656820859722187773`10.", ",", 
   "15.7288872859366536654040406731452138516`10.", ",", 
   "15.9273708793136173631920062299682027691`10.", ",", 
   "16.12341117681167755300451799359118160072`10.", ",", 
   "16.31709624950989469369530608919286116217`10.", ",", 
   "16.50850900109559236347854935232210542604`10.", ",", 
   "16.69772758263279807557262678658274113287`10.", ",", 
   "16.88482576548234240189867071924417329888`10.", ",", 
   "17.0698732774215122579902242575503858456`10.", ",", 
   "17.25293610630693319483410269200861091738`10.", ",", 
   "17.43407677503112073131534139072114313752`10.", ",", 
   "17.61335459102147480760264415427211297139`10.", ",", 
   "17.79082587310469749719229172428528076748`10.", ",", 
   "17.96654415819694343585843588062836815013`10.", ",", 
   "18.14056038997006420349764940438806368648`10.", ",", 
   "18.31292309137856038366383535925968134061`10.", ",", 
   "18.48367852270329730273712784271426510892`10.", ",", 
   "18.65287082657088177261838964015053009292`10.", ",", 
   "18.82054216123703645850384614058496825444`10.", ",", 
   "18.98673282327435071906554950975388778683`10.", ",", 
   "19.15148136067609592105538219021147335869`10.", ",", 
   "19.31482467727557424266429445652771548091`10.", ",", 
   "19.47679812928237338488715497506428607718`10.", ",", 
   "19.63743561465094432179652946866365109956`10.", ",", 
   "19.79676965592142972660408702565954850112`10.", ",", 
   "19.95483147710622580687699207508067817164`10.", ",", 
   "20.1116510751371510811081913728251719114`10.", ",", 
   "20.26725728633629104179428517626838796877`10.", ",", 
   "20.42167784832770592539536914201674076594`10.", ",", 
   "20.5749394577664739838553947225769077593`10.", ",", 
   "20.72706782422534501022699390743200749406`10.", ",", 
   "20.87808772054703867991961754439254908311`10.", ",", 
   "21.02802302994145620306095998066847616749`10.", ",", 
   "21.17689679008136355778581681928277317273`10.", ",", 
   "21.32473123442708740654118303228698174865`10.", ",", 
   "21.47154783099012537957908642158269803669`10.", ",", 
   "21.61736731872703613437482639643069462277`10.", ",", 
   "21.76220974173830183110201170131191655663`10.", ",", 
   "21.90609448143183688097899306297480577485`10.", ",", 
   "22.0490402867972684906486490578908342351`10.", ",", 
   "22.19106530292487557569193393086240056928`10.", ",", 
   "22.33218709789200145155224658654248859863`10.", ",", 
   "22.47242268812972763181726728233480068426`10.", ",", 
   "22.61178856237350107116482179887720435212`10.", ",", 
   "22.75030070429314808911143247007435463568`10.", ",", 
   "22.88797461389019898535743216669742834062`10.", ",", 
   "23.02482532774361176686908350481669578922`10.", ",", 
   "23.16086743817875377107897094013951992889`10.", ",", 
   "23.29611511142881612007056991591400670695`10.", ",", 
   "23.43058210485264430911534250581744912669`10.", ",", 
   "23.56428178326822106049067042363678474115`10.", ",", 
   "23.69722713445669222196499462428128809258`10.", ",", 
   "23.82943078388784484123560074037466926473`10.", ",", 
   "23.96090500871429448226506215187209941985`10.", ",", 
   "24.09166175107828578483607659944185750049`10.", ",", 
   "24.22171263077192876006624179524327743237`10.", ",", 
   "24.35106895728885870286413371602770640852`10.", ",", 
   "24.47974174130269770440759596094085980563`10.", ",", 
   "24.60774170560529058502534730748486421888`10.", ",", 
   "24.73507929553546962640942278460409394305`10.", ",", 
   "24.86176468892705450126529037039701151511`10.", ",", 
   "24.98780780560290158433514050182926229463`10."}], "}"}]], "Output",
 CellChangeTimes->{3.531666504114122*^9, 3.5316667619668407`*^9, 
  3.531666937841959*^9, 3.531667153735676*^9, 3.5316678800924797`*^9, 
  3.532440964937415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"funm1", "[", "x", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"m", "\[Rule]", 
          RowBox[{"Zeros", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"funm2", "[", "x", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"m", "\[Rule]", 
          RowBox[{"Zeros", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.531666774169368*^9, 3.531666895161107*^9}, {
  3.5316669587393827`*^9, 3.531666958936932*^9}, {3.5316670724195147`*^9, 
  3.531667078648321*^9}, {3.531667109066812*^9, 3.531667117635871*^9}, {
  3.53166716474482*^9, 3.53166716588087*^9}, {3.531667283840757*^9, 
  3.53166728396656*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
kWFkr1IqEXrHQW+qeojBKT72Zlxyu1JN8E13g6stkw+RRYPCMh84aDSwfTRN
EuD1lQNPkj9x8E3D4IvoZQG8pj7bqNRx0Pxu46GCAgHkgg14WV+J+hKspHE+
CPCB8eCudgMHo5sj0w0riPnZde72V40cGLRn9L29J4DGj1Dqhp8cpBk63F1/
UIBmU/KVyhYOjMx7NWSlBbhYukvPtI0DefHuyO2P+DDQK2n++puDBtW9E0Y6
fFCzNE7b/yHqIbN5ajJjGEkKCart/zioNPUu6pQYhsm18Q/uZA4SA3ttLh7m
gTfr40encpD9krT0d9UQskObpI8xOLi3W9yZpjAEYY8nLqe5HMTfm/l76/EA
CprlZmZ6ObhzMjl1IKofnpZROZcHCP5c+fr9SUgfFlRyrObzODAO2+Gmf43w
U/r7+pP4BL7Vngc0v/Ug6FHNbaVRDlKOaV7V3NyD5cq6WzLHCT1acK6zqJWL
poS7XSunODjJ/zer+ZiLaFHRSy9mONgqs932Wh4X+qcDVxkKc1H/+sntV1Qu
yL0djeWiXJi5fRUo7O5B4iHz0B0SXAQLnlLmsHpAaitQ+iLJxX5fqY77+b0Y
tF5abTuPS+gWtbQ9tQ+Z1Vd8WqW5SPC/R69/ROiZ4fBctwVc0B/n3ilqIPT4
mccrqhwXW3ofrV8SM4jPve2BDxdz8djrVlqnwRCu6+9Z46bIRapr8JpS2hD2
htb3KapwEW+VG30mkYclpaYvWlW5kGoOEpUwHMbfycqApOVcJGbUrI77SvAN
G3Xt/uNivZ1tfooNH34xr3rmreQiKji6bFcZoW912s+/aHNxM2Gfa8B8AfhS
2f6XV3ORc9iXFWFK+DlbFR2TNVw8V9k79cON8EdJyZwZfS7yttKtHjgLYN4m
/axiPRf+TtV/p9cLIKV8xe/0Ri4efhcrG+Tx0eQupL1hCxf91+iP9qbwkZJ1
hjW0lQvffzXnmpbz4cbgPX5pzMXF/9R2ttwZhsaqAN9jO7j4derST99xHtgB
DE1tMy58pvTNVOx5COG352bt5GLKdLSjlzuIzZv3+HjYcJHrqdUeSfS7mYj6
/1TsuIjJSK1NVBvAp2pTWvseLmLLrNPjGX2IF32XnezIRWfWgQaVxl7YW270
2uNMvOfTlepgSg8Urr1Sl3EleNCcujx8ZQ/+NmpT6t24qC0vqbuXzUW2XHbm
lYNcnFa6+i5vPxd+TiqeZl5cmK/selC8m4s1aclqwoe5aHv00Xwiigv+P+nu
d0e4aPnGceju4aJM/UrGWX8uvjy4eW/OrR5EHRby2HSciz9vjqz1PUro5bMz
qvwTXBQ/dDhzOLCP8F28vwUnubC5OkdIKbUfTfoB6cfDuNh+tvn5mX8DSAll
HNA5zUVGk8vufWnE/FLqocI6y8X9gSnT7J1DYGNPmmc0F5vyv7uoZ/DwMqZ+
v2oMFwVPfz+Z2jyM0DpTpc7LXGTGxcet+TgMo3nvfqdc5aL3ZE1U9GY+Zm03
pjpc4+Kq0z9Ptzt8fEp65bwggYuINRZ27DY+4tu0l3xP5KLB1Htm6SQf9srZ
bXG3uWAc1ytpFRJAwUMlxSKFi5P3w2I7WHz8zUreJ3qPi7vV7nb/CvjIZkgv
rrnPxVGZvc+j3Al+rrry61wGF1qfk8s2DQ5D77hQ8pYsLgKfHNtkE0DoacEZ
h5EcLubfjQssaOWhlM+Te0PUMU+loYSrz4PZOcYt3Xwubq+TqJhtGoRUjcce
zksufi9Ktw9fPogm0d8LHhdyIVn1YqN9Xz9SLPc0eRVx8anZ4bN/YR8OXKu/
qVbCRfjD3cdrU3qx/Iep3d8yLuTWnZtmPiL8jdw7mXuVXJwV+9y1gMlFvtPG
xn3VXGjnSlWJuxNxpr26IfeBi3OWf5r/yHBRMpV25cMnoj4DHKQypjmY8oi9
cLKOC4WcUe0qLS5M3gdHaNRzUVnFD6ASOF/5zz2suYGLp9PbFMcJ/jVctjpx
8QcXGyPOydvxeyDHXn/UoJkLmcMdYm/6euFsreZN/cXFTOPTTznz+pGeL+We
1M6F+3fPiavEPEiRGXEy6eRCx1ps/oTVIFYGU+x5f7nYwbMeDCH80rGWBuvs
bi5cm+avlnswhIINpWZ7Cd2zaAvxKyfxILibYyzC4CJoJG0kqoMHo4mEza9Z
XNRUt0R+8hpGtNtZAy8uF4rh0y6Hfw+jtuqwrlwfF1RKWuTPjXxIqe9Z+WGA
0Ae/zKlVhF+3j9m2/CSPC3XWB3PnHD7uMLSUNQRcHHkfHKX0ko9Oy0XyzaNE
3VwM9Ze7z4da3oz0xQkulqnJ3PniT/iZ+dw5BtNcnK9QeZCzjI9nga3C1FlC
x2OcKyilxHzaVDN5S4TwCapajbHbhrF+fb5gh3gPhLKS/cxf8HD6zt2BoTk9
cN5Xlugly4OoayBtj3QPtJ8kjpKJ+diqcv8/4QU96Dl6JiRYZhAJy8zbC+V6
YBs3v5bc2I+WaP2fhxb3AIusDN/d6YMiTeXbQsUenIstke482wt38zm175V7
4PSiwa0gtgfZT3hVwao98Hv9wzKhhgvW3K5S9eU9uBJpQXMndFU34Ovrn4Tv
WX4v9U34Lw6CG4vyL2j24H3mP9sIwlcU62c+Xqfdg9kjX9abNRP8SbqWSdHp
ge/dL5d+ryLyKAhPu6XXg+SwDm4owdNYZ6/kHfo9UFxlEpZ5juBP2e6EIQMi
vhKtLtvjvVi4dMvVrA098I66ZSB7qQ9OUSsu7iH65CP1rLPmpf24T5Y9J7yV
0CW1xy0bhQZBNpkMK9zeg/yFu8gGzwbhP6f56ELTHiyRvTsjIhjCq6PvvN+b
96D0Qmz37Rs88L89dQ+26sExi93TbQqEnqxJdlbf1UPUv0Vm3PVhnE88v+cn
0UcxELVNpIfwozz/XRfsifu0qy7uJuZpqX1O5usciLWGC9PcmQ+7kh2g7OvB
5r7BjtxDfCQr6W255dID+3XmG6Vt+eiIUFy/g/CBWneiQmRU+VjWJao35N6D
M0ZiKcubhuFNGliZ9b8KzDwcyrcNw0oiS6VQyZYQUikhKRctQtIqLQhF0kIq
IkqKJJUopJRCVBLKGlKSKGUPFf0kzZh3mSVJie/5/pxjjnmX+76e+z7PceNB
IsuJm7RPhKy7nRobd/NwsyT1cyIlBD3utfIYLx7ebrS5wHcWYtHePIU8bx6W
1xTkSD8XoHxulJT8IfL80aobjQ/wYdIyrT7OjwffaYHLxycTXgnJvKJwhIf1
sfcCBj0Z6Gmbbk04xoPayntS4cRn7ta/Vp5+nOShqNzSZzkFlYCt3deDeVCt
G2QqnHi4ptaXNjOU5POhunYWmYsTa455p5ziIbd7itoywhVRvhLz1MN54EaH
h+7MJJw8/ZoglXjXh60mfdeCuAiu1CrUPMdDQ3Dpw2mE2396Pw1OP084+vsd
7TuEOw/Kr4IO8TDFMS0/zpF501fSLJ51iQfaNa7rRVU/3Dx2v9Eje8jcqEHy
TzQPHdKimIfxhKP/SVnmBFLY9CR847wEHp41vN3meIbG251TlB4n8dDqFno0
5h6DVePudhre4KE+7c8huw4Wpo4vdi9O5aHmlrlDhjaZJ/826Bbe5SGRcqFS
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
D/BaxcH/AO8pjxQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 1}, {0, 200}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5316670667230883`*^9, 3.531667103757167*^9, 
  3.531667143308683*^9, 3.531667240901561*^9, 3.5316673404766207`*^9, 
  3.53244102220203*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing solution", "Section",
 CellChangeTimes->{{3.53209609626903*^9, 3.5320961126629047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"\[Pi]", " ", "x"}], "]"}], "*", 
   RowBox[{"BesselJ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "4"}], ",", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.532096146875114*^9, 3.5320961693353643`*^9}, {
  3.532096243467514*^9, 3.5320962758898478`*^9}, {3.53209647574782*^9, 
  3.5320964795555696`*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox["\[Pi]"], " ", 
  SqrtBox["x"], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], ",", 
    FractionBox[
     SuperscriptBox["x", "2"], "4"]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.532096170955367*^9, {3.532096249880714*^9, 3.532096276512251*^9}, 
   3.532096481191492*^9, 3.532441022375148*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{"test", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5320963932069187`*^9, 3.532096416168584*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], " ", 
  SqrtBox["\[Pi]"], " ", 
  SuperscriptBox["x", 
   RowBox[{"5", "/", "2"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], ",", 
    FractionBox[
     SuperscriptBox["x", "2"], "4"]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.5320963982928247`*^9, 3.532096416719302*^9}, 
   3.532096484730516*^9, 3.532441022509506*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"test", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "+", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "/", "4"}], "*", "test"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532096178601934*^9, 3.532096209150846*^9}, {
  3.5320964510841017`*^9, 3.532096461668336*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.532096199435401*^9, 3.5320962102616262`*^9}, {
   3.532096251451532*^9, 3.5320962693187532`*^9}, 3.532096351249174*^9, {
   3.532096432463298*^9, 3.5320964857597103`*^9}, 3.532441022593479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"test", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532096522122426*^9, 3.53209655022537*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
R2/yiDqQ4TH/vWVn77GQYX1gqLYTGZrPugYbZ7FQyU4/0hFXMmgscXis3sBC
XzacW/XcgwwVBTJjC0vZyDz1dG75eTJMT/t0+JLYqE7VceuwFxnCjKb3XaKx
UYvI8QPa/mTgdg68mN7KRseuH+o4fJUMws93X/HdzUZds3sdL18jg6fHp1q/
I2w08MvIt/wWGU78SR1Z/Pd/+Pj6pDVhZHC6msY44cNGCces66LukWHp3139
lOts9FdqaOb3fTKks9K2773LRnY152mnHpJhtmhnUO9DNvp4Y8GiJobo35mh
1R3P2Yi8/Y7PpqdkaFUp+WTwio38Z0hJT+LJ8GK3Y+diJht1ZCfU8r8g4hns
51/9no0M3DRn3F+SwcTiY+uHYjaKUc+ntqQR4yU0y0wvZ6OZLmOLrW/IIO1A
4fJWsZHVo4ZLydlksC48FFZcy0Z5+08kir4jw+VqU+eORjYiCQ3XeH0gw9YE
C/0TLWx0sfzCdFchMb7nbYu2/2Cjb/6LFJMSMlzfppJ1o52NNmwO3fOmjAzP
tvS3aXayUSRT9pLsZzKwFYr49brYiPUqMeFKFRke8XnzvCC87+S6ml81ZFgI
SEzxJPxGqWBqbwMZ3ix72hBPfC/aspPy/hsZGHcj7LU72Mg9vNFc9TtRH0/9
gdbGRtWmNt4h7WTY42Vg693KRqt5RuKZXWRwqQ1KX/2NjW4XXKy26iXD/CU6
FdWz0fCFv5MlA2TIKl8sz/vKRqaaYWoaw2SwTFvxILyCjVJ+yZlHjJGB86Xk
2ZcSNloSn+Q1wyDDDUXlSft8Njp1TCv+Pw4Zsm9ff2OTw0blUoVfKyfJYLZZ
b7ggjY2oNSaT62fJsD7St8I3kY2CbjSpxsyTQU8/xCM2ho22z4xcdOVTgeDz
snSem2z0LNvreeNSFVhWt07bzI+N/pzm+aovpAIT2jtpEx5sVNglryokqQL3
1gnonLNiI8VHL8zOy6iAt0bCpBFRj777119sl1OB3wbyKX5b2Ei33LQqTUUF
TpAp1vKqbJT7yvuC+VoV6JVNkliez0JSJ3mf5WqpwLq3GhRaNAt5KoVXKm1U
AfSl0pblwUJa4cnkcX0VcBoyZcxTWCj9QvOXMFMVYGs5dP29xERCmv9xuLtV
IGbTTGDsbiZy/TWmbLNXBUzjVyeLKjPRymN85zUPq4CElFPAzUIGStq2Qbnu
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
6D9BvWbW
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 10}, {-1.454601749451118, 2.432560428515041}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.532096529662551*^9, 3.532096550820842*^9}, 
   3.5324410228634863`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"m", " ", "x"}], "]"}], "*", 
   RowBox[{"BesselJ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", "4"}], ",", 
     RowBox[{
      RowBox[{"m", "^", "2"}], " ", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.532096889563735*^9, 3.5320969202183228`*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"m", " ", "x"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.532096921273077*^9, 3.532441022874317*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{"m", " ", "x"}], "]"}], "*", 
   RowBox[{"BesselJ", "[", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{
      RowBox[{"m", "^", "2"}], " ", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "2"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5320969220859747`*^9, 3.5320969395141153`*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"m", " ", "x"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    FractionBox["1", "4"], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.53209694047338*^9, 3.532441022881167*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"sol1", ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532096944259013*^9, 3.532096958790141*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["m", "2"], ")"}], 
    RowBox[{"3", "/", "4"}]]}], 
  RowBox[{
   SuperscriptBox["m", 
    RowBox[{"3", "/", "2"}]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["3", "4"], "]"}]}]]], "Output",
 CellChangeTimes->{3.532096959763156*^9, 3.532441023018868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"sol2", ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532096968110314*^9, 3.532096975124813*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.532096976279541*^9, 3.532441023111573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["sol1"], "Input",
 CellChangeTimes->{{3.532107855269657*^9, 3.532107857095683*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"m", " ", "x"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "4"]}], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.532107857882839*^9, 3.53244102312215*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dersol1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"sol1", ",", "x"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.532097072807851*^9, 3.532097102305901*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "m"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", " ", "x"}], ")"}], 
   RowBox[{"3", "/", "2"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    FractionBox["3", "4"], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.532097084709146*^9, 3.5320971029442177`*^9}, 
   3.532441023210986*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dersol2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"sol2", ",", "x"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.532097085615946*^9, 3.53209710652324*^9}}],

Cell[BoxData[
 RowBox[{"m", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"m", " ", "x"}], ")"}], 
   RowBox[{"3", "/", "2"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "4"]}], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.532097097199046*^9, 3.532097107156369*^9}, 
   3.5324410233722486`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"dersol1", ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5320971900248137`*^9, 3.532097196899172*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["m", 
    RowBox[{"5", "/", "2"}]]}], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    FractionBox["3", "4"], ",", 
    FractionBox[
     SuperscriptBox["m", "2"], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.5320971981962223`*^9, 3.532441023635482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{"dersol2", ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532097199569756*^9, 3.532097208698153*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["m", 
   RowBox[{"5", "/", "2"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "4"]}], ",", 
    FractionBox[
     SuperscriptBox["m", "2"], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.532097209908038*^9, 3.53244102381562*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Zerostrue", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", 
       RowBox[{"BesselJZero", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], "/", "4"}], ",", "i"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "200"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.532109053062829*^9, 3.532109084955838*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"BesselJZero", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], "/", "4"}], ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "200"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.532122320135041*^9, 3.5321223445466337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zeros", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", 
        RowBox[{"BesselJZero", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], "/", "4"}], ",", "i"}], "]"}]}], "]"}], ",", 
      "10"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "200"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.5320973665667677`*^9, {3.532109036578459*^9, 3.532109036672639*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.45499708549819386722507026854180579346`10.", ",", 
   "2.92713300440027766553121136094888110735`10.", ",", 
   "3.8575781013492938200342434118812546441`10.", ",", 
   "4.60177773228129985324241798621793597148`10.", ",", 
   "5.24082406699070314354952418816449605517`10.", ",", 
   "5.80978786426398906487468774457944491812`10.", ",", 
   "6.32769430108396681532057061373337375445`10.", ",", 
   "6.8062480022514212669586769504065468988`10.", ",", 
   "7.25326168965686308822824791463505009483`10.", ",", 
   "7.6742592995607184149250788121278225534`10.", ",", 
   "8.07331795319108946335626947213305371378`10.", ",", 
   "8.45354897437340233163926840148873400306`10.", ",", 
   "8.81739086884080680472896916336389339722`10.", ",", 
   "9.16679702363228751221979864959553140746`10.", ",", 
   "9.50336098897760887069148869968298949199`10.", ",", 
   "9.82840298647447126437751319761265707777`10.", ",", 
   "10.14303137712219911244514916412671544951`10.", ",", 
   "10.44818741811621983414432659838862125807`10.", ",", 
   "10.74467854808127573053205335964669225223`10.", ",", 
   "11.03320360258297538892991564331548075855`10.", ",", 
   "11.31437222998145142057443770168774860219`10.", ",", 
   "11.58872005940677119103217820431909528765`10.", ",", 
   "11.85672070452047449321754322768063874146`10.", ",", 
   "12.11879537438111167446084673341581712359`10.", ",", 
   "12.37532064988645588833414500384166974648`10.", ",", 
   "12.62663483645073127192279608364483685065`10.", ",", 
   "12.8730431991488418101183117224826294002`10.", ",", 
   "13.11482231162738863620077232279337810946`10.", ",", 
   "13.35222369554359348133575969794532279845`10.", ",", 
   "13.58547688707664934803393403887138075079`10.", ",", 
   "13.81479203704230978691485194517723996389`10.", ",", 
   "14.0403621284925403691860805796792028747`10.", ",", 
   "14.2623648784142054972133104428159388272`10.", ",", 
   "14.4809643768493324602515059590286238574`10.", ",", 
   "14.69631250643745383397730190280670992963`10.", ",", 
   "14.90855017729768053412230968849290743382`10.", ",", 
   "15.11780840578937570988470787292523813834`10.", ",", 
   "15.32420926061949995243758582398480085884`10.", ",", 
   "15.52786669570596600871656820859722187773`10.", ",", 
   "15.7288872859366536654040406731452138516`10.", ",", 
   "15.9273708793136173631920062299682027691`10.", ",", 
   "16.12341117681167755300451799359118160072`10.", ",", 
   "16.31709624950989469369530608919286116217`10.", ",", 
   "16.50850900109559236347854935232210542604`10.", ",", 
   "16.69772758263279807557262678658274113287`10.", ",", 
   "16.88482576548234240189867071924417329888`10.", ",", 
   "17.0698732774215122579902242575503858456`10.", ",", 
   "17.25293610630693319483410269200861091738`10.", ",", 
   "17.43407677503112073131534139072114313752`10.", ",", 
   "17.61335459102147480760264415427211297139`10.", ",", 
   "17.79082587310469749719229172428528076748`10.", ",", 
   "17.96654415819694343585843588062836815013`10.", ",", 
   "18.14056038997006420349764940438806368648`10.", ",", 
   "18.31292309137856038366383535925968134061`10.", ",", 
   "18.48367852270329730273712784271426510892`10.", ",", 
   "18.65287082657088177261838964015053009292`10.", ",", 
   "18.82054216123703645850384614058496825444`10.", ",", 
   "18.98673282327435071906554950975388778683`10.", ",", 
   "19.15148136067609592105538219021147335869`10.", ",", 
   "19.31482467727557424266429445652771548091`10.", ",", 
   "19.47679812928237338488715497506428607718`10.", ",", 
   "19.63743561465094432179652946866365109956`10.", ",", 
   "19.79676965592142972660408702565954850112`10.", ",", 
   "19.95483147710622580687699207508067817164`10.", ",", 
   "20.1116510751371510811081913728251719114`10.", ",", 
   "20.26725728633629104179428517626838796877`10.", ",", 
   "20.42167784832770592539536914201674076594`10.", ",", 
   "20.5749394577664739838553947225769077593`10.", ",", 
   "20.72706782422534501022699390743200749406`10.", ",", 
   "20.87808772054703867991961754439254908311`10.", ",", 
   "21.02802302994145620306095998066847616749`10.", ",", 
   "21.17689679008136355778581681928277317273`10.", ",", 
   "21.32473123442708740654118303228698174865`10.", ",", 
   "21.47154783099012537957908642158269803669`10.", ",", 
   "21.61736731872703613437482639643069462277`10.", ",", 
   "21.76220974173830183110201170131191655663`10.", ",", 
   "21.90609448143183688097899306297480577485`10.", ",", 
   "22.0490402867972684906486490578908342351`10.", ",", 
   "22.19106530292487557569193393086240056928`10.", ",", 
   "22.33218709789200145155224658654248859863`10.", ",", 
   "22.47242268812972763181726728233480068426`10.", ",", 
   "22.61178856237350107116482179887720435212`10.", ",", 
   "22.75030070429314808911143247007435463568`10.", ",", 
   "22.88797461389019898535743216669742834062`10.", ",", 
   "23.02482532774361176686908350481669578922`10.", ",", 
   "23.16086743817875377107897094013951992889`10.", ",", 
   "23.29611511142881612007056991591400670695`10.", ",", 
   "23.43058210485264430911534250581744912669`10.", ",", 
   "23.56428178326822106049067042363678474115`10.", ",", 
   "23.69722713445669222196499462428128809258`10.", ",", 
   "23.82943078388784484123560074037466926473`10.", ",", 
   "23.96090500871429448226506215187209941985`10.", ",", 
   "24.09166175107828578483607659944185750049`10.", ",", 
   "24.22171263077192876006624179524327743237`10.", ",", 
   "24.35106895728885870286413371602770640852`10.", ",", 
   "24.47974174130269770440759596094085980563`10.", ",", 
   "24.60774170560529058502534730748486421888`10.", ",", 
   "24.73507929553546962640942278460409394305`10.", ",", 
   "24.86176468892705450126529037039701151511`10.", ",", 
   "24.98780780560290158433514050182926229463`10.", ",", 
   "25.11321831644006708870055811559405011212`10.", ",", 
   "25.23800565202952916807855725233848557165`10.", ",", 
   "25.36217901095241434764955105803052194794`10.", ",", 
   "25.48574736769328349128365881159583403571`10.", ",", 
   "25.60871948020974298826286481975975821267`10.", ",", 
   "25.73110389717644977090884369535145447412`10.", ",", 
   "25.85290896492046671466441961895419977548`10.", ",", 
   "25.97414283406389114600188817002274285412`10.", ",", 
   "26.09481346588871741131460938622563226671`10.", ",", 
   "26.21492863843799910251461835808144532308`10.", ",", 
   "26.33449595236654244200346861227048588322`10.", ",", 
   "26.45352283655358479297050162584261891475`10.", ",", 
   "26.57201655348918697331695241490058544311`10.", ",", 
   "26.68998420444539106900228677122542365513`10.", ",", 
   "26.80743273444256315115350431279997534856`10.", ",", 
   "26.92436893702074938634192144279007313002`10.", ",", 
   "27.04079945882532144885899301531481996968`10.", ",", 
   "27.15673080401567010330138314407973778928`10.", ",", 
   "27.27216933850522175671071533349314030512`10.", ",", 
   "27.38712129404059931904444842046619226734`10.", ",", 
   "27.5015927721273236836935924258084318931`10.", ",", 
   "27.61558974780905354225731176234972335349`10.", ",", 
   "27.7291180733069872325213158703418891891`10.", ",", 
   "27.84218348152569918138829195005926719402`10.", ",", 
   "27.95479158943135367217217459578099206443`10.", ",", 
   "28.06694790130792868493048549539313948149`10.", ",", 
   "28.17865781189679108601986330122701795418`10.", ",", 
   "28.28992660942469023626614819841869888214`10.", ",", 
   "28.40075947852497899599227553112094158799`10.", ",", 
   "28.51116150305662806454610751360670020052`10.", ",", 
   "28.62113766882537061488637648812395120886`10.", ",", 
   "28.73069286621109835498093694749057922709`10.", ",", 
   "28.83983189270542661807516764707431009937`10.", ",", 
   "28.94855945536315406496103915669137916186`10.", ",", 
   "29.0568801731711613409334377673415823046`10.", ",", 
   "29.16479857933812188755478470256750080465`10.", ",", 
   "29.27231912350823643173581130305598484097`10.", ",", 
   "29.37944617390204987306787317871788072344`10.", ",", 
   "29.48618401938726481655462124120669710125`10.", ",", 
   "29.59253687148232934120849531844604066321`10.", ",", 
   "29.69850886629544727947065323370919097601`10.", ",", 
   "29.80410406640153686430690657788455184085`10.", ",", 
   "29.90932646265954766612311748559774855157`10.", ",", 
   "30.01417997597243590390627603971350150613`10.", ",", 
   "30.11866845899199411336949914690532327191`10.", ",", 
   "30.22279569777063245220418800300579966128`10.", ",", 
   "30.32656541336211530366113731323828860625`10.", ",", 
   "30.42998126337316800985656774510794595015`10.", ",", 
   "30.53304684346778424965974281784788344284`10.", ",", 
   "30.63576568882598451462550996210811760772`10.", ",", 
   "30.73814127555870008843862044749237208531`10.", ",", 
   "30.84017702208038467423650413525089107265`10.", ",", 
   "30.94187629044088712766532761964247197981`10.", ",", 
   "31.04324238761805344250874245193788967589`10.", ",", 
   "31.14427856677246401343051602820994092765`10.", ",", 
   "31.24498802846565309148851505340619403559`10.", ",", 
   "31.34537392184310108800767554807196747595`10.", ",", 
   "31.44543934578323681652762544616436194505`10.", ",", 
   "31.54518735001363574556992207115040025218`10.", ",", 
   "31.64462093619555173030629520550814059172`10.", ",", 
   "31.74374305897787337038869531048321724651`10.", ",", 
   "31.84255662702155198335866402750935579003`10.", ",", 
   "31.94106450399550607442669973690566199931`10.", ",", 
   "32.03926950954496701688704959865752152949`10.", ",", 
   "32.13717442023319233211440246191059324658`10.", ",", 
   "32.23478197045743637890376025406812142327`10.", ",", 
   "32.3320948533400333392444262206737417055`10.", ",", 
   "32.42911572159541403695459353004036502966`10.", ",", 
   "32.52584718837384626722529314756156470492`10.", ",", 
   "32.62229182808265787380385283987981671219`10.", ",", 
   "32.71845217718567271527340480752168049866`10.", ",", 
   "32.81433073498156184559640922164469829255`10.", ",", 
   "32.90992996436178563343892818712533595107`10.", ",", 
   "33.00525229254877709991720871849168655602`10.", ",", 
   "33.10030011181499240872330175856904949934`10.", ",", 
   "33.1950757801834311425848422978186438702`10.", ",", 
   "33.28958162211020669508315428123093798331`10.", ",", 
   "33.38381992914972574910337400807292800838`10.", ",", 
   "33.47779296060301535729165391139036783079`10.", ",", 
   "33.57150294414971654292997638109045828092`10.", ",", 
   "33.66495207646424456096091071617847102829`10.", ",", 
   "33.75814252381659795999302999814069109588`10.", ",", 
   "33.85107642265828133049731221695276895748`10.", ",", 
   "33.94375588019379007746889846827016789414`10.", ",", 
   "34.03618297493808968477029020386653034837`10.", ",", 
   "34.12835975726050671207285194423922248034`10.", ",", 
   "34.22028824991543415424745496796627832388`10.", ",", 
   "34.31197044856023976919944069946467878346`10.", ",", 
   "34.40340832226075251689394752650991177954`10.", ",", 
   "34.49460381398468932441114488664586585868`10.", ",", 
   "34.58555884108337197530893078738323253588`10.", ",", 
   "34.67627529576207199355108937742868830515`10.", ",", 
   "34.76675504553930993111018811488628688854`10.", ",", 
   "34.85699993369542445347390503952573964184`10.", ",", 
   "34.94701177971071602907920565032839016549`10.", ",", 
   "35.03679237969345984853538895846276566212`10.", ",", 
   "35.12634350679807280964407458082225661366`10.", ",", 
   "35.21566691163370998780798420173588853397`10.", ",", 
   "35.30476432266355695237833445456265592042`10.", ",", 
   "35.39363744659507557252854953002314187671`10."}], "}"}]], "Output",
 CellChangeTimes->{3.5320973669344597`*^9, 3.532109041806147*^9, 
  3.532441027365354*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"BesselJZero", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], "/", "4"}], ",", "i"}], "]"}], ",", "10"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5320975144840927`*^9, 3.5320975495809097`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.05850825940411923720145284431883010207`10.", ",", 
   "4.28405381272469797362059307149478480202`10.", ",", 
   "7.44045440400481129153973554213370833963`10.", ",", 
   "10.58817914866001131270539189053108360097`10.", ",", 
   "13.7331184505744870554669453875010578577`10.", ",", 
   "16.87681751387456171337251465243389691653`10.", ",", 
   "20.01985758398525563928061937362628084553`10.", ",", 
   "23.1625059340757314979294099370075660687`10.", ",", 
   "26.30490256932196623347991204515492677149`10.", ",", 
   "29.44712789844708421051652903269786262984`10."}], "}"}]], "Output",
 CellChangeTimes->{{3.532097541177335*^9, 3.5320975501021338`*^9}, 
   3.5324410274162397`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"BesselJZero", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "/", "4"}], ",", "3"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5320976468941708`*^9, 3.532097684225737*^9}}],

Cell[BoxData["0.20712112799361637`"], "Output",
 CellChangeTimes->{{3.5320976691535063`*^9, 3.5320976844901667`*^9}, 
   3.532441027430799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"1", "/", "4"}], ",", 
    RowBox[{"BesselJZero", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "/", "4"}], ",", "1"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.53209768705965*^9, 3.53209770615534*^9}}],

Cell[BoxData["0.7428972095605313`"], "Output",
 CellChangeTimes->{{3.532097703786646*^9, 3.532097706457253*^9}, 
   3.532441027444374*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["sol2"], "Input",
 CellChangeTimes->{{3.5321086183342733`*^9, 3.532108619233302*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{"m", " ", "x"}]], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    FractionBox["1", "4"], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.5321086198003807`*^9, 3.53244102745121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2m", "=", 
  RowBox[{
   SqrtBox["x"], " ", 
   RowBox[{"BesselJ", "[", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["m", "2"], " ", 
       SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5321089498700943`*^9, 3.5321089633778677`*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox["x"], " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    FractionBox["1", "4"], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["m", "2"], " ", 
      SuperscriptBox["x", "2"]}], "2"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.532108964916053*^9, 3.532441027504437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sol2m", "/.", 
       RowBox[{"{", 
        RowBox[{"m", "\[Rule]", 
         RowBox[{"Zerostrue", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.53210844327344*^9, {3.532108507985517*^9, 3.532108546239097*^9}, {
   3.53210861483714*^9, 3.532108695787098*^9}, {3.5321089443386393`*^9, 
   3.532109017008008*^9}, {3.532109093189909*^9, 3.532109094819209*^9}, 
   3.532109408351077*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.532108657372456*^9, 3.53210871212013*^9}, {
   3.532108981251295*^9, 3.5321090285213213`*^9}, 3.5321094048689747`*^9, 
   3.532109479752899*^9, 3.532441068035035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "3"}], " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "2"}], "*", 
       RowBox[{
        RowBox[{"Zerostrue", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}]}], "]"}], "*", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "2"}], "*", 
       RowBox[{
        RowBox[{"Zerostrue", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532109483051404*^9, 3.5321095662199583`*^9}, {
   3.5321096004311037`*^9, 3.532109603133369*^9}, 3.5321222675887747`*^9, {
   3.532441092898164*^9, 3.532441132047963*^9}, {3.5324417886375437`*^9, 
   3.532441819276218*^9}, {3.532442259720331*^9, 3.5324422704981747`*^9}, {
   3.5324423489488783`*^9, 3.532442357907048*^9}}],

Cell[BoxData["0.036854581143239175`"], "Output",
 CellChangeTimes->{
  3.5321095270600033`*^9, {3.5321095591078176`*^9, 3.5321095677067347`*^9}, 
   3.532109604594149*^9, 3.532122274157703*^9, {3.532441071976564*^9, 
   3.532441133771585*^9}, 3.532441791260746*^9, 3.532441829448423*^9, {
   3.532442261143393*^9, 3.532442271439546*^9}, {3.532442352672258*^9, 
   3.532442358734671*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wmcubic", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "3"}], " ", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{
          RowBox[{"1", "/", "4"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", "2"}], "*", 
           RowBox[{
            RowBox[{"Zerostrue", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}]}], "]"}], "^", 
        "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "40"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.532442505233798*^9, 3.532442537788351*^9}, {
  3.532443000150921*^9, 3.5324430034293137`*^9}, {3.532454532701058*^9, 
  3.532454534646595*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.13797406599320738`", ",", "0.036854581143239175`", ",", 
   "0.02133155594370827`", ",", "0.015010686087355087`", ",", 
   "0.011579602879061325`", ",", "0.009425240459319681`", ",", 
   "0.00794676552988761`", ",", "0.006869235708429393`", ",", 
   "0.006049027438296182`", ",", "0.005403797343711836`", ",", 
   "0.004882949141705082`", ",", "0.0044536787382349384`", ",", 
   "0.0040937854185415555`", ",", "0.0037877079495512375`", ",", 
   "0.0035242151877391964`", ",", "0.003294997916730558`", ",", 
   "0.0030937766542952425`", ",", "0.002915717555439377`", ",", 
   "0.0027570390413366227`", ",", "0.0026147402465559653`", ",", 
   "0.0024864094328322945`", ",", "0.002370086181472648`", ",", 
   "0.002264160539779118`", ",", "0.0021672980550348627`", ",", 
   "0.0020783832616715044`", ",", "0.0019964765310819576`", ",", 
   "0.0019207807375925753`", ",", "0.001850615230525651`", ",", 
   "0.001785395309967969`", ",", "0.0017246158947239064`", ",", 
   "0.0016678384163521522`", ",", "0.0016146802195225812`", ",", 
   "0.0015648059267859933`", ",", "0.0015179203557653368`", ",", 
   "0.0014737626725206412`", ",", "0.0014321015367415484`", ",", 
   "0.0013927310476398757`", ",", "0.0013554673405968029`", ",", 
   "0.00132014571598235`", ",", "0.0012866182056656857`"}], "}"}]], "Output",
 CellChangeTimes->{3.532442581285491*^9, 3.5324430267067623`*^9, 
  3.532443073033338*^9, 3.5324546911854687`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wmfivetwo", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"5", "/", "2"}], ")"}]}], " ", 
       RowBox[{"BesselJ", "[", 
        RowBox[{
         RowBox[{"1", "/", "4"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "^", "2"}], "/", "2"}], "*", 
          RowBox[{
           RowBox[{"Zerostrue", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "40"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.532442724587455*^9, 3.532442729963325*^9}, {
  3.532443009644376*^9, 3.5324430183004713`*^9}, {3.532454538452189*^9, 
  3.532454538884706*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.20996479709362217`", ",", "0.018180897590318785`", ",", 
   "0.006919303361557072`", ",", "0.0037318500468507265`", ",", 
   "0.0023673658890243144`", ",", "0.0016504522182779553`", ",", 
   "0.0012240656323313512`", ",", "0.0009483894730813764`", ",", 
   "0.0007590968780885121`", ",", "0.0006230691899630487`", ",", 
   "0.000521773141559365`", ",", "0.0004441474396258039`", ",", 
   "0.00038324243624026397`", ",", "0.00033450473194280715`", ",", 
   "0.0002948449039830018`", ",", "0.0002621039555673866`", ",", 
   "0.0002347343932804438`", ",", "0.00021160239472918784`", ",", 
   "0.00019186109713872825`", ",", "0.00017486713895424112`", ",", 
   "0.00016012432055124612`", ",", "0.00014724473213250115`", ",", 
   "0.0001359214046973261`", ",", "0.00012590872750600792`", ",", 
   "0.00011700820222555297`", ",", "0.0001090579288501799`", ",", 
   "0.00010192474302362525`", ",", "0.00009549826478267914`", ",", 
   "0.00008968634379190777`", ",", "0.00008441153749062422`", ",", 
   "0.00007960836196536182`", ",", "0.00007522112702512196`", ",", 
   "0.00007120221729922205`", ",", "0.00006751071698186362`", ",", 
   "0.0000641113016165315`", ",", "0.000060973339051508034`", ",", 
   "0.00005807015547318643`", ",", "0.00005537843263812609`", ",", 
   "0.00005287771007323228`", ",", "0.00005054997178480274`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.532442783290613*^9, 3.532445179508144*^9, 
  3.5324548251326017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coeffs", "=", 
  RowBox[{"wmcubic", "/", "wmfivetwo"}]}]], "Input",
 CellChangeTimes->{{3.532443036848743*^9, 3.5324430637263737`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["0.13797406599320738`", "wmfivetwo"], ",", 
   FractionBox["0.036854581143239175`", "wmfivetwo"], ",", 
   FractionBox["0.02133155594370827`", "wmfivetwo"], ",", 
   FractionBox["0.015010686087355087`", "wmfivetwo"], ",", 
   FractionBox["0.011579602879061325`", "wmfivetwo"], ",", 
   FractionBox["0.009425240459319681`", "wmfivetwo"], ",", 
   FractionBox["0.00794676552988761`", "wmfivetwo"], ",", 
   FractionBox["0.006869235708429393`", "wmfivetwo"], ",", 
   FractionBox["0.006049027438296182`", "wmfivetwo"], ",", 
   FractionBox["0.005403797343711836`", "wmfivetwo"], ",", 
   FractionBox["0.004882949141705082`", "wmfivetwo"], ",", 
   FractionBox["0.0044536787382349384`", "wmfivetwo"], ",", 
   FractionBox["0.0040937854185415555`", "wmfivetwo"], ",", 
   FractionBox["0.0037877079495512375`", "wmfivetwo"], ",", 
   FractionBox["0.0035242151877391964`", "wmfivetwo"], ",", 
   FractionBox["0.003294997916730558`", "wmfivetwo"], ",", 
   FractionBox["0.0030937766542952425`", "wmfivetwo"], ",", 
   FractionBox["0.002915717555439377`", "wmfivetwo"], ",", 
   FractionBox["0.0027570390413366227`", "wmfivetwo"], ",", 
   FractionBox["0.0026147402465559653`", "wmfivetwo"]}], "}"}]], "Output",
 CellChangeTimes->{3.5324451347577467`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"5", "/", "2"}], ")"}]}], " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "2"}], "*", 
       RowBox[{
        RowBox[{"Zerostrue", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "^", "2"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532442856355228*^9, 3.532442874951961*^9}, {
  3.532442907333438*^9, 3.532442907444812*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "::", "\<\"ztest1\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Unable to decide whether \
numeric quantity \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Hypergeometric0F1[\\(\\(1\\/4,\
 \\(\\(\\(\\(-\\(\\(1\\/4\\)\\)\\)\\)\\\\ \\(BesselJZero[\\(\\(\\(\\(-\\(\\(3\
\\/4\\)\\)\\)\\), 2\\)\\)]\\)\\^2\\)\\)\\)\\)]\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is equal to zero. \
Assuming it is.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Limit\\\", ButtonNote -> \\\"Limit::ztest1\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.532442875745693*^9, 3.532442908614946*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"1", "/", "4"}]], " ", 
   SuperscriptBox[
    RowBox[{"BesselJZero", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], ",", "2"}], "]"}], 
    RowBox[{"7", "/", "4"}]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", "4"], "]"}]}]]], "Output",
 CellChangeTimes->{3.532442875885141*^9, 3.53244290868712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"x", "*", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "*", 
       RowBox[{"coeffs", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], "*", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "*", 
       RowBox[{"coeffs", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532122355599292*^9, 3.5321224479320087`*^9}}],

Cell[BoxData["0.0714686004203984`"], "Output",
 CellChangeTimes->{{3.532122414907463*^9, 3.532122448974259*^9}, 
   3.532441073261887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}], 
     RowBox[{"BesselJ", "[", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.532112235159792*^9, 3.532112289023056*^9}}],

Cell[BoxData["0.03711350082154526`"], "Output",
 CellChangeTimes->{{3.532112259154251*^9, 3.532112289928204*^9}, 
   3.5324410743251123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"x", "*", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "/", "4"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.532122224859918*^9, 3.532122244799542*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   SuperscriptBox["2", 
    RowBox[{"1", "/", "4"}]], " ", 
   RowBox[{"HypergeometricPFQ", "[", 
    RowBox[{
     RowBox[{"{", 
      FractionBox["5", "8"], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["5", "4"], ",", 
       FractionBox["13", "8"]}], "}"}], ",", 
     RowBox[{"-", 
      FractionBox["1", "64"]}]}], "]"}]}], 
  RowBox[{"5", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", "4"], "]"}]}]]], "Output",
 CellChangeTimes->{3.5321222456317873`*^9, 3.5324410750135803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"BesselJ", "[", 
   RowBox[{
    RowBox[{"1", "/", "4"}], ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.532444747219977*^9, 3.532444756037393*^9}}],

Cell[BoxData["0.7522313333407901`"], "Output",
 CellChangeTimes->{{3.532444752270934*^9, 3.532444756431322*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1053, 533},
WindowMargins->{{6, Automatic}, {Automatic, 30}},
FrontEndVersion->"7.0 for Linux x86 (64-bit) (February 25, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 592, 15, 32, "Input"],
Cell[1162, 39, 1103, 33, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2302, 77, 208, 5, 32, "Input"],
Cell[2513, 84, 259, 8, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2809, 97, 138, 4, 32, "Input"],
Cell[2950, 103, 235, 8, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3222, 116, 267, 8, 32, "Input"],
Cell[3492, 126, 380, 11, 47, "Output"]
}, Open  ]],
Cell[3887, 140, 666, 21, 32, "Input"],
Cell[CellGroupData[{
Cell[4578, 165, 346, 9, 32, "Input"],
Cell[4927, 176, 255, 5, 31, "Output"]
}, Open  ]],
Cell[5197, 184, 1390, 43, 54, "Input"],
Cell[CellGroupData[{
Cell[6612, 231, 264, 7, 32, "Input"],
Cell[6879, 240, 739, 14, 24, "Message"],
Cell[7621, 256, 224, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7882, 267, 264, 7, 32, "Input"],
Cell[8149, 276, 1832, 30, 31, "Message"],
Cell[9984, 308, 266, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10287, 320, 194, 4, 32, "Input"],
Cell[10484, 326, 753, 23, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11274, 354, 350, 11, 32, "Input"],
Cell[11627, 367, 314, 10, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11978, 382, 226, 6, 32, "Input"],
Cell[12207, 390, 136, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12380, 397, 203, 5, 32, "Input"],
Cell[12586, 404, 112, 1, 31, "Output"]
}, Open  ]],
Cell[12713, 408, 712, 23, 32, "Input"],
Cell[13428, 433, 710, 23, 32, "Input"],
Cell[CellGroupData[{
Cell[14163, 460, 325, 9, 32, "Input"],
Cell[14491, 471, 41038, 680, 226, "Output"]
}, Open  ]],
Cell[55544, 1154, 906, 27, 58, "Input"],
Cell[56453, 1183, 860, 27, 58, "Input"],
Cell[CellGroupData[{
Cell[57338, 1214, 351, 8, 32, "Input"],
Cell[57692, 1224, 822, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58551, 1255, 249, 6, 32, "Input"],
Cell[58803, 1263, 767, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59607, 1294, 409, 12, 32, "Input"],
Cell[60019, 1308, 674, 12, 33, "Message"],
Cell[60696, 1322, 674, 12, 33, "Message"],
Cell[61373, 1336, 161, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61571, 1345, 263, 6, 32, "Input"],
Cell[61837, 1353, 435, 15, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62309, 1373, 212, 5, 32, "Input"],
Cell[62524, 1380, 408, 14, 67, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62969, 1399, 217, 5, 32, "Input"],
Cell[63189, 1406, 570, 19, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63796, 1430, 219, 5, 32, "Input"],
Cell[64018, 1437, 592, 20, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64647, 1462, 1278, 42, 58, "Input"],
Cell[65928, 1506, 354, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66319, 1523, 198, 5, 32, "Input"],
Cell[66520, 1530, 172, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66729, 1540, 226, 6, 54, "Input"],
Cell[66958, 1548, 112, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67107, 1554, 689, 18, 32, "Input"],
Cell[67799, 1574, 5985, 105, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73821, 1684, 1268, 35, 32, "Input"],
Cell[75092, 1721, 52768, 870, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127897, 2596, 102, 1, 73, "Section"],
Cell[CellGroupData[{
Cell[128024, 2601, 466, 13, 32, "Input"],
Cell[128493, 2616, 379, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128909, 2633, 239, 6, 32, "Input"],
Cell[129151, 2641, 442, 14, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129630, 2660, 393, 11, 32, "Input"],
Cell[130026, 2673, 244, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130307, 2681, 208, 5, 32, "Input"],
Cell[130518, 2688, 22607, 377, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153162, 3070, 416, 13, 32, "Input"],
Cell[153581, 3085, 357, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153975, 3102, 396, 12, 32, "Input"],
Cell[154374, 3116, 335, 11, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154746, 3132, 180, 4, 32, "Input"],
Cell[154929, 3138, 379, 13, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155345, 3156, 180, 4, 32, "Input"],
Cell[155528, 3162, 92, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155657, 3168, 96, 1, 32, "Input"],
Cell[155756, 3171, 356, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156149, 3188, 217, 5, 32, "Input"],
Cell[156369, 3195, 455, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156861, 3215, 216, 5, 32, "Input"],
Cell[157080, 3222, 458, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157575, 3242, 185, 4, 32, "Input"],
Cell[157763, 3248, 315, 10, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158115, 3263, 183, 4, 32, "Input"],
Cell[158301, 3269, 313, 10, 50, "Output"]
}, Open  ]],
Cell[158629, 3282, 448, 13, 32, "Input"],
Cell[159080, 3297, 383, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[159488, 3312, 519, 16, 32, "Input"],
Cell[160010, 3330, 11709, 204, 512, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171756, 3539, 390, 12, 32, "Input"],
Cell[172149, 3553, 723, 14, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172909, 3572, 324, 10, 32, "Input"],
Cell[173236, 3584, 143, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173416, 3591, 320, 10, 32, "Input"],
Cell[173739, 3603, 138, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173914, 3610, 98, 1, 32, "Input"],
Cell[174015, 3613, 337, 11, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174389, 3629, 352, 11, 57, "Input"],
Cell[174744, 3642, 312, 10, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175093, 3657, 928, 26, 32, "Input"],
Cell[176024, 3685, 224, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176285, 3693, 1096, 29, 55, "Input"],
Cell[177384, 3724, 387, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177808, 3735, 870, 25, 32, "Input"],
Cell[178681, 3762, 1465, 24, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180183, 3791, 885, 25, 32, "Input"],
Cell[181071, 3818, 1484, 25, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182592, 3848, 159, 3, 32, "Input"],
Cell[182754, 3853, 1301, 23, 119, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184092, 3881, 634, 19, 32, "Input"],
Cell[184729, 3902, 786, 14, 50, "Message"],
Cell[185518, 3918, 414, 13, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185969, 3936, 669, 20, 32, "Input"],
Cell[186641, 3958, 138, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186816, 3965, 569, 17, 32, "Input"],
Cell[187388, 3984, 141, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187566, 3991, 378, 11, 32, "Input"],
Cell[187947, 4004, 562, 18, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188546, 4027, 203, 5, 32, "Input"],
Cell[188752, 4034, 112, 1, 31, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
